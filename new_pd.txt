import os
import numpy as np
from skimage import io

# Define the directories for the weighted images and month images
weighted_images_dir = "C:\\Users\\Manoj\\Desktop\\weighted_images"
months_dir = "C:\\Users\\Manoj\\Desktop\\month_images"

# Initialize dictionaries to store cloud-free pixel counts for each year
cloud_free_counts = {year: 0 for year in range(2000, 2024)}

# Loop through the years (2000 to 2023)
for year in range(2000, 2024):
    for month in range(1, 13):
        # Construct the filenames for the weighted image and the month image
        weighted_image_filename = f"{year}_month_{month}_weighted.TIFF"
        month_image_filename = f"{year}_month_{month}.TIFF"

        # Create file paths for the weighted image and month image
        weighted_image_path = os.path.join(weighted_images_dir, weighted_image_filename)
        month_image_path = os.path.join(months_dir, month_image_filename)

        try:
            # Load the weighted image and the month image
            weighted_image = io.imread(weighted_image_path)
            month_image = io.imread(month_image_path)

            # Check if image dimensions match
            if weighted_image.shape != month_image.shape:
                print(f"Image dimensions do not match for {year}-month-{month}, skipping...")
                continue

            # Count the number of cloud-free pixels (where both are 0)
            cloud_free_pixels = np.logical_and(weighted_image == 0, month_image == 0)
            cloud_free_count = np.sum(cloud_free_pixels)

            # Update the count in the dictionary for the respective year
            cloud_free_counts[year] += cloud_free_count
        except FileNotFoundError:
            print(f"Images not found for {year}-month-{month}, skipping...")

# Display the cloud-free pixel counts for each year
for year, count in cloud_free_counts.items():
    print(f"Year {year}: {count} cloud-free pixels")
